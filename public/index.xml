<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Pol Espinasa</title>
    <link>http://localhost:1313/</link>
    <description>Recent content on Pol Espinasa</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>english</language>
    <lastBuildDate>Tue, 16 Apr 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Grouphug - Batching transactions without interaction between users</title>
      <link>http://localhost:1313/posts/grouphug/</link>
      <pubDate>Tue, 16 Apr 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/grouphug/</guid>
      <description>With the intention of trying to help make Bitcoin transactions more economical and inspired by the implementation of Peach made by Czino GroupHug has been born. A transaction batching system that allows to share between users the fees of a transaction without the need of coordination between users.
This post explains what GroupHug is, how it works technically and what advantages and disadvantages it has.
The Bitcoin Grouphug GroupHug is a transaction batching solution that allows to create joint transactions between users similar to a coinjoin without interaction or coordination between users, but with some limitations.</description>
    </item>
    <item>
      <title>How to make a transaction with UTXOs of different wallets with Sparrow</title>
      <link>http://localhost:1313/posts/psbt_sparrow/</link>
      <pubDate>Sun, 07 Apr 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/psbt_sparrow/</guid>
      <description>Let&amp;rsquo;s suppose that Bob and Alice share a flat and want to buy a television worth 2 bitcoins, paying half each. To do so, Bob could send 1 bitcoin to Alice so that she pays for the TV, but since the network fees are quite high, they decide to create a joint transaction with two inputs, one from Alice and one from Bob.
&amp;#x1f4a1; The practical examples in the post are made in testnet.</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/about/</guid>
      <description>About me I am doing research at the Department of Information and Communication Engineering (DEiC) at the Universitat AutÃ²noma de Barcelona (UAB). I am also studying a master in cybersecurity and privacy at the Universitat Oberta de Catalunya (UOC).
My current interests are Bitcoin, the Lightning Network and protocols on top of Bitcoin. In fact, these are the topics on which I do research ðŸ˜‰. Apart from Bitcoin related topics, I am also passionate about cryptography, privacy, cybersecurity and programming.</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/publications/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/publications/</guid>
      <description></description>
    </item>
  </channel>
</rss>
